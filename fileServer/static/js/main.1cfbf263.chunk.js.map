{"version":3,"sources":["logo.svg","component/header/Head.tsx","configureStore/ConfigureStore.ts","component/sidebar/SideBar.tsx","container/fileUpload/FileUpload.tsx","container/imageList/ImageList.tsx","container/Container.tsx","container/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Head","Header","className","href","alt","src","logo","width","height","history","createBrowserHistory","middleWares","routerMiddleware","configureStore","preloadedState","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","SideBar","props","useState","trigger","setTrigger","Sider","SubMenu","defaultSelected","defaultOpened","mainMenuData","style","left","background","breakpoint","collapsible","onBreakpoint","isLowerBreakpoint","collapsedWidth","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","onClick","push","pathname","key","theme","map","main","item","undefined","url","Item","type","iconType","title","temp","sub","renderItem","defaultProps","baseHttpUrl","RequestUrls","uploadFile","fileList","packageName","fileDirs","deleteFile","FileUploadPage","setFileUploading","imgUrl","setImgUrl","previewVisible","setPreviewVisible","folders","setFolders","signal","axios","CancelToken","source","useEffect","a","get","cancelToken","token","result","data","fetchData","cancel","uploadButton","index","toString","handlePackageClick","name","action","listType","onChange","info","file","status","response","path","beforeUpload","isJpgOrPng","message","error","isLt2M","size","showUploadList","visible","footer","onCancel","ImageList","setFileList","previewImage","setPreviewImage","fetchImageData","location","state","displayData","uid","handleRemoveFile","console","log","post","filePath","headers","success","onPreview","onRemove","Container","Content","padding","minHeight","overflow","exact","component","Root","App","store","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1cfbf263.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { Layout } from 'antd'\r\nimport logo from \"../../logo.svg\";\r\n\r\nconst Head = () => {\r\n  const { Header } = Layout;\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"logo\">\r\n        <a href=\"\">\r\n          <img alt=\"\" src={logo} width=\"50\" height=\"50\" />\r\n        </a>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nexport default Head;","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware, connectRouter } from \"connected-react-router\";\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n  });\n\nexport const history = createBrowserHistory();\n\nconst reactRouterMiddleware = routerMiddleware(history);\n\nconst middleWares = [reactRouterMiddleware];\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(...middleWares))\n  );\n\n  return store;\n}\n","import React, { useState } from \"react\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\nimport { history } from \"../../configureStore/ConfigureStore\";\r\n\r\nexport const navigationMenuData: MainMenuData[] = [\r\n  {\r\n    iconType: \"video-camera\",\r\n    title: \"fileUpload\",\r\n    key: \"/\",\r\n    url: \"/\",\r\n  },\r\n];\r\n\r\ntype SideBarProps = {\r\n  defaultSelected: Array<string>;\r\n  defaultOpened: Array<string>;\r\n  mainMenuData: Array<MainMenuData>;\r\n};\r\ntype MainMenuData = {\r\n  item?: Array<SubMenuData>;\r\n  iconType: string;\r\n  title: string;\r\n  key: string;\r\n  url?: string;\r\n};\r\ntype SubMenuData = {\r\n  key: string;\r\n  title: string;\r\n};\r\n\r\nconst SideBar = (props: SideBarProps) => {\r\n  const [trigger, setTrigger] = useState<string | null>(null);\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const { defaultSelected, defaultOpened, mainMenuData } = props;\r\n\r\n  const renderItem = (item: MainMenuData) => {\r\n    if (item.item===undefined && item.url) {\r\n      return (\r\n        <Menu.Item key={item.key}>\r\n          <Icon type={item.iconType} />\r\n          <span>{item.title}</span>\r\n        </Menu.Item>\r\n      );\r\n    } else {\r\n      const temp = item as any;\r\n      return (\r\n        <SubMenu\r\n          key={item.key}\r\n          title={\r\n            <span>\r\n              <Icon type={item.iconType} />\r\n              {item.title}\r\n            </span>\r\n          }\r\n        >\r\n          {temp.item.map((sub:SubMenuData) => (\r\n            <Menu.Item key={sub.key}>{sub.title}</Menu.Item>\r\n          ))}\r\n        </SubMenu>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Sider\r\n      width={trigger === null ? \"20vw\" : \"40vw\"}\r\n      style={{\r\n        height: \"calc(100vh - 64px)\",\r\n        left: 0,\r\n        background: \"#fff\",\r\n      }}\r\n      breakpoint=\"lg\"\r\n      collapsible\r\n      onBreakpoint={(isLowerBreakpoint) => {\r\n        setTrigger(isLowerBreakpoint ? \"1\" : null);\r\n      }}\r\n      collapsedWidth={0}\r\n      trigger={trigger}\r\n    >\r\n      <Menu\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={defaultSelected}\r\n        defaultOpenKeys={defaultOpened}\r\n        style={{ height: \"100%\", borderRight: 0 }}\r\n        onClick={(props) => {\r\n          history.push({ pathname: props.key });\r\n        }}\r\n        theme=\"dark\"\r\n      >\r\n        {mainMenuData.map((main) => (\r\n          renderItem(main)\r\n        ))}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nSideBar.defaultProps = {\r\n  defaultSelected: [\"/\"],\r\n  defaultOpened: [\"demoRoom\"],\r\n  mainMenuData: navigationMenuData,\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message, Icon, Upload, Modal } from \"antd\";\r\nimport { UploadChangeParam } from \"antd/lib/upload\";\r\nimport { UploadFile, RcFile } from \"antd/lib/upload/interface\";\r\nimport axios from \"axios\";\r\nimport {history} from '../../configureStore/ConfigureStore'\r\n\r\nexport const baseHttpUrl = process.env.NODE_ENV  === \"development\" ? \"http://localhost:3999\": \"http://123.207.87.254:3999/\";\r\nexport const RequestUrls = {\r\n  uploadFile: `${baseHttpUrl}/uploadFile`,\r\n  fileList:(packageName:string) => `${baseHttpUrl}/fileList/${packageName}`,\r\n  fileDirs:`${baseHttpUrl}/imageDirs`,\r\n  deleteFile: `${baseHttpUrl}/delete`\r\n};\r\n\r\nconst FileUploadPage = () => {\r\n  const [fileUploading, setFileUploading] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [folders, setFolders] = useState<string[]>([]);\r\n  const signal = axios.CancelToken.source();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(RequestUrls.fileDirs, {\r\n        cancelToken: signal.token,\r\n      });\r\n      setFolders(result.data);\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      signal.cancel(\"cancel api call\");\r\n    };\r\n  }, [previewVisible]);\r\n\r\n  function beforeUpload(file: RcFile) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  const handleChange = (info: UploadChangeParam<UploadFile>) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setFileUploading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // first parameter should be response url\r\n      setFileUploading(false);\r\n      setImgUrl(baseHttpUrl + info.file.response.path);\r\n      setPreviewVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  const handlePackageClick = (item:string) =>{\r\n    history.push(\"/list\",{packageName:item})\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Icon type=\"plus\" />\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"file-container\">\r\n        {folders.map((item, index) => {\r\n          return (\r\n            <div className=\"col-img\" key={index.toString()} onClick={() => {handlePackageClick(item)}}>\r\n              <Icon type=\"folder-open\" theme=\"filled\" className=\"file-icon\" />\r\n              <span>{item}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"file-upload-container\">\r\n        <div>\r\n          <Upload\r\n            name=\"img\"\r\n            action={RequestUrls.uploadFile}\r\n            listType=\"picture-card\"\r\n            onChange={handleChange}\r\n            beforeUpload={beforeUpload}\r\n            showUploadList={false}\r\n          >\r\n            {uploadButton}\r\n          </Upload>\r\n        </div>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={imgUrl} />\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default FileUploadPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Upload, Modal, message } from \"antd\";\nimport { RequestUrls, baseHttpUrl } from \"../fileUpload/FileUpload\";\nimport axios from \"axios\";\nimport \"./_imageList.scss\";\ntype DisplayType = {\n  uid: string;\n  name: string;\n  status: string;\n  url: string;\n};\nconst ImageList = (props) => {\n  const [fileList, setFileList] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const signal = axios.CancelToken.source();\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  const fetchImageData = async () => {\n    const packageName = props.location.state.packageName;\n    const result = await axios.get(RequestUrls.fileList(packageName), {\n      cancelToken: signal.token,\n    });\n    let displayData = result.data.map(\n      (item: string, index): DisplayType => {\n        return {\n          uid: index,\n          name: item,\n          url: baseHttpUrl + \"/\" + item,\n          status: \"done\",\n        };\n      }\n    );\n    setFileList(displayData);\n  };\n\n  useEffect(() => {\n    fetchImageData();\n    return () => {\n      signal.cancel(\"cancel api call\");\n    };\n  }, []);\n\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n  const handlePreview = (file) => {\n    setPreviewImage(file.url);\n    setPreviewVisible(true);\n  };\n  const handleRemoveFile = async (file) => {\n    console.log(file)\n    const result = await axios.post(\n      RequestUrls.deleteFile,\n      { filePath: file.name },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n    console.log(result.data)\n    if(result.data.status === 1){\n      fetchImageData();\n      message.success('删除成功')\n    }\n  };\n  return (\n    <div>\n      <Upload\n        listType=\"picture-card\"\n        action={RequestUrls.uploadFile}\n        fileList={fileList}\n        onPreview={handlePreview}\n        className=\"img-list-card\"\n        onRemove={handleRemoveFile}\n      ></Upload>\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default ImageList;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport FileUploadPage from './fileUpload/FileUpload';\nimport ImageList from './imageList/ImageList'\n\nconst Container = () => {\n  const { Content } = Layout;\n  return (\n    <Layout style={{ padding: '24px' }}>\n      <Content\n        style={{\n          background: '#fff',\n          padding: 24,\n          minHeight: 280,\n          height: 'calc(100vh - 112px)',\n          overflow: 'auto',\n        }}\n      >\n        <Switch>\n          <Route path=\"/\" exact component={FileUploadPage} />\n          <Route path=\"/list\" component={ImageList}/>\n        </Switch>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport { Layout } from 'antd';\nimport Head from '../component/header/Head';\nimport SideBar from '../component/sidebar/SideBar';\nimport Container from './Container';\nimport { history } from '../configureStore/ConfigureStore';\n\nconst Root = () => {\n  useEffect(() => {\n    history.push('/');\n  });\n  return (\n    <Layout>\n      <Head />\n      <Layout>\n        <SideBar />\n        <Container />\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from \"connected-react-router\";\nimport Root from \"./container/Root\";\nimport configureStore, { history } from \"./configureStore/ConfigureStore\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Provider store={configureStore(undefined)}>\n      <ConnectedRouter history={history}>\n        <Root />\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}